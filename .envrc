# NEKO_OSX_URL        = "https://github.com/HaxeFoundation/neko/releases/download/v2-3-0/neko-2.3.0-osx64.tar.gz"
# NEKO_WINDOWS_URL    = "https://github.com/HaxeFoundation/neko/releases/download/v2-3-0/neko-2.3.0-win64.zip"
# NEKO_LINUX_URL      = "https://github.com/HaxeFoundation/neko/releases/download/v2-3-0/neko-2.3.0-linux64.tar.gz"

# RCLONE_WINDOWS_URL  = https://downloads.rclone.org/v1.62.2/rclone-v1.62.2-windows-amd64.zip
# RCLONE_OSX_URL      = https://downloads.rclone.org/v1.62.2/rclone-v1.62.2-osx-amd64.zip
# RCLONE_LINUX_URL    = https://downloads.rclone.org/v1.62.2/rclone-v1.62.2-linux-amd64.zip

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
#echo "${SCRIPT_DIR}"
export BERTHA_PATH="${SCRIPT_DIR}"

dotenv .env.checked_in

#echo "${BERTHA_PATH}"

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  mkdir -p ".local/share/bertha/o/bins/linux/x64"

  export BERTHA_HOME="${HOME}/.local/share/bertha"
  
  # *****
  # Clyde
  # *****

  ZERO_INSTALL_PATH="$BERTHA_PATH/.local/share/bertha/o/os/linux/prg/0install"

  if test -f "$BERTHA_PATH/.local/share/bertha/o/var/clyde"/bin/clyde; then  
    clyde_install=$(direnv fetchurl "https://builds.agateau.com/clyde/clyde-0.5.0+20230905T213346-f5229aa-x86_64-linux.tar.gz" "sha256-bvITtWN57OT5oCEegE/aeGZoYkvLPNtH0IUGcLXE7/s=")
    tar -xzf $clyde_install --directory /tmp && cd /tmp/clyde* && ./clyde setup

    export CLYDE_HOME="$BERTHA_PATH/.local/share/bertha/o/var/clyde"
    local inst_dir=$CLYDE_HOME/inst
    
    export PATH="$inst_dir/bin:$PATH"
    export MANPATH="$inst_dir/share/man:${MANPATH-}"
    export XDG_DATA_DIRS="$inst_dir/share:${XDG_DATA_DIRS-/usr/local/share:/usr/share}"
    export CLYDE_INST_DIR=$inst_dir
    
    clyde install xh
  fi

  # ********
  # Redl
  # ********
  redl_install=$(fetchurl "https://github.com/gek64/redl/releases/download/v1.06/redl-linux-amd64" "sha256-PCLRF9cAUfA0tb/cxqhHo4KtjndzSTGMis7OkYKbtuE=")
  # echo $redl_install

  if ! has redl; then
    mv -f $redl_install $BERTHA_PATH/.local/share/bertha/o/bins/linux/x64/redl
  fi

  # *************
  # Aim
  # *************
  aim_location="https://github.com/mihaigalos/aim/releases/download/1.8.5/aim-1.8.5-x86_64-unknown-linux-gnu.tar.gz" 
  aim_install=$(fetchurl "$aim_location" "sha256-tx8SXrQwOmUcpxB6PSW+P5TdDdm52SFyHyxTE5uDrwI=")
  tar -xzf $aim_install --directory /tmp

  if ! has aim; then
    mv -f /tmp/aim $BERTHA_PATH/.local/share/bertha/o/bins/linux/x64/aim
  fi
  PATH_add $BERTHA_PATH/.local/share/bertha/o/bins/linux/x64/

  # # *************
  # # Nostromo
  # # *************
  # nostromo_install=$(fetchurl "https://github.com/pokanop/nostromo/releases/download/v0.12.0/nostromo_Linux_x86_64.tar.gz" "sha256-PrshICnBaUSAwQWeB9t303jnFd5H7oweC28pBb52WVU=")
  # tar -xzf $nostromo_install --directory /tmp

  # if ! has nostromo; then
  #   mv -f /tmp/nostromo $BERTHA_PATH/.local/share/bertha/o/bins/linux/x64/nostromo
  # fi

  PATH_add "${ZERO_INSTALL_PATH}"/bin

  if ! has 0install; then 
    echo "0install NOT installed"
    cd tmp
    curl -O https://get.0install.net/0install.sh && chmod +x 0install.sh
    ./0install.sh install "${ZERO_INSTALL_PATH}"
  fi
  
elif [[ "$OSTYPE" == "darwin"* ]]; then
  fetchurl https://builds.agateau.com/clyde/clyde-0.5.0+20230905T213346-f5229aa-x86_64-macos.tar.gz
  export BERTHA_HOME="${HOME}/.local/share/bertha"
  ZERO_INSTALL_PATH="$BERTHA_PATH/.local/share/bertha/o/os/darwin/prg/0install"  
  PATH_add "${ZERO_INSTALL_PATH}"/bin
  if ! has 0install; then 
    echo "0install NOT installed"
    cd tmp
    curl -O https://get.0install.net/0install.sh && chmod +x 0install.sh
    ./0install.sh install "${ZERO_INSTALL_PATH}"
  fi
elif [[ "$OSTYPE" == "cygwin" ]]; then
  fetchurl https://builds.agateau.com/clyde/clyde-0.5.0+20230803T094244-8c8f563-x86_64-windows.zip
  export BERTHA_HOME="${USERPROFILE}/.local/share/bertha"
  printf '%s\n' "Cygwin not tested" >&2   
elif [[ "$OSTYPE" == "msys" ]]; then
  fetchurl https://builds.agateau.com/clyde/clyde-0.5.0+20230803T094244-8c8f563-x86_64-windows.zip
  printf '%s\n' "MSys not tested" >&2 
elif [[ "$OSTYPE" == "win32" ]]; then
  fetchurl https://builds.agateau.com/clyde/clyde-0.5.0+20230803T094244-8c8f563-x86_64-windows.zip
  printf '%s\n' "Win32 not tested" >&2 
else
  throw "unsupported platform, please report issue at https://github.com/ohmrun/bertha"
fi


0install add bb     https://raw.githubusercontent.com/ohmrun/0install_babshka/main/Babashka.xml > /dev/null >2 /dev/null
0install add neko   https://raw.githubusercontent.com/ohmrun/0install_neko/main/Neko.xml > /dev/null >2 /dev/null
0install add rclone https://raw.githubusercontent.com/ohmrun/0install_rclone/main/RClone.xml > /dev/null >2 /dev/null

if ! [ -s $HOME/.config/bertha.env ]; then
  echo "BERTHA_PATH=$BERTHA_PATH" > $HOME/.config/bertha.env
fi

if test -z ${PRJ_DIR} & test -d "${PRJ_DIR}/.nostromo"; then
  echo 'set NOSTROMO_HOME to' + $'{PRJ_DIR}/.nostromo'
  export NOSTROMO_HOME=${PRJ_DIR}/.nostromo
fi