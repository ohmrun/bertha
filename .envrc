# NEKO_OSX_URL        = "https://github.com/HaxeFoundation/neko/releases/download/v2-3-0/neko-2.3.0-osx64.tar.gz"
# NEKO_WINDOWS_URL    = "https://github.com/HaxeFoundation/neko/releases/download/v2-3-0/neko-2.3.0-win64.zip"
# NEKO_LINUX_URL      = "https://github.com/HaxeFoundation/neko/releases/download/v2-3-0/neko-2.3.0-linux64.tar.gz"

# RCLONE_WINDOWS_URL  = https://downloads.rclone.org/v1.62.2/rclone-v1.62.2-windows-amd64.zip
# RCLONE_OSX_URL      = https://downloads.rclone.org/v1.62.2/rclone-v1.62.2-osx-amd64.zip
# RCLONE_LINUX_URL    = https://downloads.rclone.org/v1.62.2/rclone-v1.62.2-linux-amd64.zip

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
export BERTHA_PATH="${SCRIPT_DIR}"
echo "${BERTHA_PATH}"


if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  NEKO_VERSION_STRING="neko-2.3.0-linux64";
  RCLONE_VERSION_STRING="rclone-v1.62.2-linux-amd64"
  ${BERTHA_PATH}/.local/bertha/i/src/ohmrun/bertha/main/bash/bertha/meta/install/linux.sh ${NEKO_VERSION_STRING} ${RCLONE_VERSION_STRING}
  PATH_add "${BERTHA_PATH}/.local/bertha/o/os/linux/prg/${NEKO_VERSION_STRING}"
  PATH_add "${BERTHA_PATH}/.local/bertha/o/os/linux/prg/${RCLONE_VERSION_STRING}"
elif [[ "$OSTYPE" == "darwin"* ]]; then
  NEKO_VERSION_STRING="neko-2.3.0-osx64";
  "${BERTHA_PATH}/.local/bertha/i/src/ohmrun/bertha/main/bash/bertha/meta/install/darwin.sh" ${NEKO_VERSION_STRING}
elif [[ "$OSTYPE" == "cygwin" ]]; then
  NEKO_VERSION_STRING="neko-2.3.0-win64"
  "${BERTHA_PATH}/.local/bertha/i/src/ohmrun/bertha/main/bash/bertha/meta/install/windows.sh" ${NEKO_VERSION_STRING}
elif [[ "$OSTYPE" == "msys" ]]; then
  NEKO_VERSION_STRING="neko-2.3.0-win64"
  "${BERTHA_PATH}/.local/bertha/i/src/ohmrun/bertha/main/bash/bertha/meta/install/windows.sh" ${NEKO_VERSION_STRING}
elif [[ "$OSTYPE" == "win32" ]]; then
  NEKO_VERSION_STRING="neko-2.3.0-win64"
  "${BERTHA_PATH}/.local/bertha/i/src/ohmrun/bertha/main/bash/bertha/meta/install/windows.sh" ${NEKO_VERSION_STRING}
else
  throw "unsupported platform, please report issue at https://github.com/ohmrun/bertha"
fi


if ! [ -s $HOME/.config/bertha.env ]; then
  echo "BERTHA_PATH=$BERTHA_PATH" > $HOME/.config/bertha.env
fi

source_env ${BERTHA_PATH}/.local/bertha/o/.bertha.lock